<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="layeredBaseControl1.Canvas" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAMAzX778H26qj9+k1hWKAAAAAElFTkSuQmCC
</value>
  </data>
</root>